<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Load test pastely">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="inputVar_1" elementType="Argument">
            <stringProp name="Argument.name">inputVar_1</stringProp>
            <stringProp name="Argument.value">b3Dwj8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_2" elementType="Argument">
            <stringProp name="Argument.name">inputVar_2</stringProp>
            <stringProp name="Argument.value">b3DwqQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_3" elementType="Argument">
            <stringProp name="Argument.name">inputVar_3</stringProp>
            <stringProp name="Argument.value">b3DwxQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_4" elementType="Argument">
            <stringProp name="Argument.name">inputVar_4</stringProp>
            <stringProp name="Argument.value">b3DwxW</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_5" elementType="Argument">
            <stringProp name="Argument.name">inputVar_5</stringProp>
            <stringProp name="Argument.value">b3DwxZ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_6" elementType="Argument">
            <stringProp name="Argument.name">inputVar_6</stringProp>
            <stringProp name="Argument.value">b3Dwx3</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_7" elementType="Argument">
            <stringProp name="Argument.name">inputVar_7</stringProp>
            <stringProp name="Argument.value">b3Dwx6</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_8" elementType="Argument">
            <stringProp name="Argument.name">inputVar_8</stringProp>
            <stringProp name="Argument.value">b3Dwya</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_9" elementType="Argument">
            <stringProp name="Argument.name">inputVar_9</stringProp>
            <stringProp name="Argument.value">b3DwNw</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_10" elementType="Argument">
            <stringProp name="Argument.name">inputVar_10</stringProp>
            <stringProp name="Argument.value">b3DwNU</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_11" elementType="Argument">
            <stringProp name="Argument.name">inputVar_11</stringProp>
            <stringProp name="Argument.value">b3DwOV</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_12" elementType="Argument">
            <stringProp name="Argument.name">inputVar_12</stringProp>
            <stringProp name="Argument.value">b3DwOX</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_13" elementType="Argument">
            <stringProp name="Argument.name">inputVar_13</stringProp>
            <stringProp name="Argument.value">b3DwOY</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_14" elementType="Argument">
            <stringProp name="Argument.name">inputVar_14</stringProp>
            <stringProp name="Argument.value">b3DwOZ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_15" elementType="Argument">
            <stringProp name="Argument.name">inputVar_15</stringProp>
            <stringProp name="Argument.value">b3DwPq</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_16" elementType="Argument">
            <stringProp name="Argument.name">inputVar_16</stringProp>
            <stringProp name="Argument.value">b3DwPw</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_17" elementType="Argument">
            <stringProp name="Argument.name">inputVar_17</stringProp>
            <stringProp name="Argument.value">b3DwPE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_18" elementType="Argument">
            <stringProp name="Argument.name">inputVar_18</stringProp>
            <stringProp name="Argument.value">b3DwPH</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_19" elementType="Argument">
            <stringProp name="Argument.name">inputVar_19</stringProp>
            <stringProp name="Argument.value">b3DwPJ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_20" elementType="Argument">
            <stringProp name="Argument.name">inputVar_20</stringProp>
            <stringProp name="Argument.value">b3DwPP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_21" elementType="Argument">
            <stringProp name="Argument.name">inputVar_21</stringProp>
            <stringProp name="Argument.value">b3DwPR</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_22" elementType="Argument">
            <stringProp name="Argument.name">inputVar_22</stringProp>
            <stringProp name="Argument.value">b3DwPT</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_23" elementType="Argument">
            <stringProp name="Argument.name">inputVar_23</stringProp>
            <stringProp name="Argument.value">b3DwPV</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_24" elementType="Argument">
            <stringProp name="Argument.name">inputVar_24</stringProp>
            <stringProp name="Argument.value">b3DwPX</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_25" elementType="Argument">
            <stringProp name="Argument.name">inputVar_25</stringProp>
            <stringProp name="Argument.value">b3DwQK</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_26" elementType="Argument">
            <stringProp name="Argument.name">inputVar_26</stringProp>
            <stringProp name="Argument.value">b3DwQM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_27" elementType="Argument">
            <stringProp name="Argument.name">inputVar_27</stringProp>
            <stringProp name="Argument.value">b3DwQO</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_28" elementType="Argument">
            <stringProp name="Argument.name">inputVar_28</stringProp>
            <stringProp name="Argument.value">b3DwQQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_29" elementType="Argument">
            <stringProp name="Argument.name">inputVar_29</stringProp>
            <stringProp name="Argument.value">b3DwRl</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_30" elementType="Argument">
            <stringProp name="Argument.name">inputVar_30</stringProp>
            <stringProp name="Argument.value">b3DwRn</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_31" elementType="Argument">
            <stringProp name="Argument.name">inputVar_31</stringProp>
            <stringProp name="Argument.value">b3DwRq</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_32" elementType="Argument">
            <stringProp name="Argument.name">inputVar_32</stringProp>
            <stringProp name="Argument.value">b3DwRs</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_33" elementType="Argument">
            <stringProp name="Argument.name">inputVar_33</stringProp>
            <stringProp name="Argument.value">b3DwRM</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_34" elementType="Argument">
            <stringProp name="Argument.name">inputVar_34</stringProp>
            <stringProp name="Argument.value">b3DwR6</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_35" elementType="Argument">
            <stringProp name="Argument.name">inputVar_35</stringProp>
            <stringProp name="Argument.value">b3DwSa</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_36" elementType="Argument">
            <stringProp name="Argument.name">inputVar_36</stringProp>
            <stringProp name="Argument.value">b3DwUY</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_37" elementType="Argument">
            <stringProp name="Argument.name">inputVar_37</stringProp>
            <stringProp name="Argument.value">b3DwU2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_38" elementType="Argument">
            <stringProp name="Argument.name">inputVar_38</stringProp>
            <stringProp name="Argument.value">b3DwZA</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_39" elementType="Argument">
            <stringProp name="Argument.name">inputVar_39</stringProp>
            <stringProp name="Argument.value">b3DwZD</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_40" elementType="Argument">
            <stringProp name="Argument.name">inputVar_40</stringProp>
            <stringProp name="Argument.value">b3DwZG</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="inputVar_41" elementType="Argument">
            <stringProp name="Argument.name">inputVar_41</stringProp>
            <stringProp name="Argument.value">b3DwZJ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="false">
          <stringProp name="ForeachController.inputVal">inputVar</stringProp>
          <stringProp name="ForeachController.returnVal">resultVar</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Paste v1" enabled="false">
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">56982</stringProp>
            <stringProp name="HTTPSampler.path">/api/v1/paste?shortlink=${resultVar}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="false">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Paste v1" enabled="false">
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">56982</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/paste</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;expiration_length_in_minutes&quot;: 1,&#xd;
    &quot;paste_content&quot;: &quot;content&quot;      &#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">inputVar</stringProp>
          <stringProp name="ForeachController.returnVal">resultVar</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
        </ForeachController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Paste v2" enabled="true">
            <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
            <stringProp name="HTTPSampler.port">56982</stringProp>
            <stringProp name="HTTPSampler.path">/api/v2/paste?shortlink=${resultVar}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <intProp name="ThreadGroup.num_threads">5</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Paste v2" enabled="true">
          <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
          <stringProp name="HTTPSampler.domain">127.0.0.1</stringProp>
          <stringProp name="HTTPSampler.port">56982</stringProp>
          <stringProp name="HTTPSampler.path">/api/v2/paste</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;expiration_length_in_minutes&quot;: 1,&#xd;
    &quot;paste_url&quot;: &quot;2025-01-02-1735829956.txt&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
