apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-cm
data:
  MINIO_ROOT_USER: root
  MINIO_ROOT_PASSWORD: rootatleast8


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
spec:
  resources:
    requests:
      storage: 500Mi
  volumeMode: Filesystem
  storageClassName: minio-storage-class
  accessModes:
    - ReadWriteOnce

---
# Deploys a new MinIO Pod into the metadata.namespace Kubernetes namespace
#
# The `spec.containers[0].args` contains the command run on the pod
# The `/data` directory corresponds to the `spec.containers[0].volumeMounts[0].mountPath`
# That mount path corresponds to a Kubernetes HostPath which binds `/data` to a local drive or volume on the worker node where the pod runs
# 
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: minio
  name: minio
spec:
  containers:
  - name: minio
    image: quay.io/minio/minio:latest
    command:
    - /bin/bash
    - -c
    args: 
    - minio server /data --console-address :9001
    volumeMounts:
    - mountPath: /data
      name: minio-pvc # Corresponds to the `spec.volumes` Persistent Volume Claim
    ports:
    - containerPort: 9000
      name: port-server
    - containerPort: 9001
      name: port-console
    envFrom:
    - configMapRef:
        name: minio-cm
  volumes:
  - name: minio-pvc
    persistentVolumeClaim:
      claimName: minio-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: minio-service
spec:
  selector:
    app: minio
  type: NodePort
  ports:
  - name: port-server
    port: 9000
    targetPort: 9000
    nodePort: 30090
  - name: port-console
    port: 9001
    targetPort: 9001
    nodePort: 30091
